#!/bin/bash
## begin license ##
#
# "NBC+" also known as "ZP (ZoekPlatform)" is
#  initiated by Stichting Bibliotheek.nl to provide a new search service
#  for all public libraries in the Netherlands.
# This package provides loadbalancer scripts
#
# Copyright (C) 2014 Seecr (Seek You Too B.V.) http://seecr.nl
# Copyright (C) 2014 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
#
# This file is part of "NBC+ (Zoekplatform BNL) Loadbalancer"
#
# "NBC+ (Zoekplatform BNL) Loadbalancer" is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# "NBC+ (Zoekplatform BNL) Loadbalancer" is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with "NBC+ (Zoekplatform BNL) Loadbalancer"; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
## end license ##

export LANG=en_US.UTF-8
exec 2>&1

source /usr/share/seecr-tools/functions.d/network

currentDir=$(cd $(dirname $0); pwd)
if [ ! -f "${currentDir}/config" ]; then
    echo "Config file not found."
    exit 1
fi
source ${currentDir}/config

if [ -z "${IPADDR}" -o -z "${RANGE}" -o -z "${SHAREDSECRET}" ]; then
    echo "Required configuration items not found. Check the config!"
    exit 1
fi

sleepTimeSec=$(( ( $RANDOM % 5 )  + 1 ))
sleepTimeMinor=$(( ( $RANDOM % 100 )  + 1 ))
echo "Sleeping ${sleepTimeSec}.${sleepTimeMinor}s before starting"

if ! lsmod | grep "^dummy" >/dev/null; then
    modprobe dummy numdummies=8
fi

DEVICE=$(network_get_nic)
SRCIP=$(ip addr show ${DEVICE}| head -n 3 | tail -n 1 | awk '{print $2}' | awk -F/ '{print $1}')
VHID=$(echo "${IPADDR}" | awk -F'.' '{print $NF}')
FREE_DUMMY=$(ip link | grep dummy | grep DOWN | head -n 1 | awk '{print $2}' | tr -d :)
export FREE_DUMMY
if [ -z "${FREE_DUMMY}" ]; then
    echo "No free dummy device found!"
    exit 1
fi

function cleanup {
    (ip link show ${FREE_DUMMY} | grep DOWN >/dev/null) || ifconfig ${FREE_DUMMY} down
    (ps --no-headers --pid ${PID} >/dev/null) && kill ${PID}
    echo "Cleanup done"
}

trap cleanup SIGTERM SIGINT
ifconfig ${FREE_DUMMY} -arp ${IPADDR} \
    netmask 255.255.255.255 \
    broadcast $(network_broadcast_range ${RANGE})

ucarp \
    --interface=${DEVICE} \
    --vhid=${VHID} \
    --srcip=${SRCIP} \
    --addr=${IPADDR} \
    --pass=${SHAREDSECRET} &

PID=$!
export PID
while ps --no-headers --pid ${PID} >/dev/null
do
    wait ${PID}
done
cleanup
